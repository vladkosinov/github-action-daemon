name: Run the bot
on:
  push:
    branches:
      - main
  schedule:
    - cron: "*/60 * * * *"
  repository_dispatch:
    types:
      - "start-on-demand"

jobs:
  start:
    runs-on: ubuntu-latest
    name: A job to run bot
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` (`steps.npm-cache.outputs.cache-hit != 'true'`)
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Wait other runs to finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node ./poll-and-exit-on-other-run-finish.js

      - name: Run bot
        env:
          TIMEOUT: 1h
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./node_modules/.bin/concurrently --kill-others --success first  "node ./poll-and-exit-on-new-run-apper" "node ./index.js"
