name: Run the bot
on:
  push:
    branches:
      - main
  repository_dispatch:
    types:
      - "start-on-demand"

jobs:
  start:
    runs-on: ubuntu-latest
    name: A job to run bot
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` (`steps.npm-cache.outputs.cache-hit != 'true'`)
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Run bot
        env:
          TIMEOUT: 1h
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          timeout --preserve-status $TIMEOUT npm start

      - name: Restart
        if: ${{ success() }}
        uses: actions/github-script@v2
        with:
          result-encoding: string
          github-token: ${{secrets.PERSONAL_GITHUB_TOKEN}}
          script: |
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split("/");

            github.repos.createDispatchEvent({
              owner,
              repo,
              event_type: 'start-on-demand',
            });
